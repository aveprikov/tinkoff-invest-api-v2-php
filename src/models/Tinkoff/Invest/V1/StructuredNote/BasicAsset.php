<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instruments.proto

namespace Tinkoff\Invest\V1\StructuredNote;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *Базовый актив.
 *
 * Generated from protobuf message <code>tinkoff.public.invest.api.contract.v1.StructuredNote.BasicAsset</code>
 */
class BasicAsset extends \Google\Protobuf\Internal\Message
{
    /**
     *Уникальный идентификатор базового актива.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     */
    protected $uid = '';
    /**
     *Тип базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.AssetType type = 2;</code>
     */
    protected $type = 0;
    /**
     *Начальная цена базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_price = 3;</code>
     */
    protected $initial_price = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $uid
     *          Уникальный идентификатор базового актива.
     *     @type int $type
     *          Тип базового актива.
     *     @type \Tinkoff\Invest\V1\Quotation $initial_price
     *          Начальная цена базового актива.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Instruments::initOnce();
        parent::__construct($data);
    }

    /**
     *Уникальный идентификатор базового актива.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     *Уникальный идентификатор базового актива.
     *
     * Generated from protobuf field <code>string uid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     *Тип базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.AssetType type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     *Тип базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.AssetType type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Tinkoff\Invest\V1\AssetType::class);
        $this->type = $var;

        return $this;
    }

    /**
     *Начальная цена базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_price = 3;</code>
     * @return \Tinkoff\Invest\V1\Quotation|null
     */
    public function getInitialPrice()
    {
        return isset($this->initial_price) ? $this->initial_price : null;
    }

    public function hasInitialPrice()
    {
        return isset($this->initial_price);
    }

    public function clearInitialPrice()
    {
        unset($this->initial_price);
    }

    /**
     *Начальная цена базового актива.
     *
     * Generated from protobuf field <code>.tinkoff.public.invest.api.contract.v1.Quotation initial_price = 3;</code>
     * @param \Tinkoff\Invest\V1\Quotation $var
     * @return $this
     */
    public function setInitialPrice($var)
    {
        GPBUtil::checkMessage($var, \Tinkoff\Invest\V1\Quotation::class);
        $this->initial_price = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BasicAsset::class, \Tinkoff\Invest\V1\StructuredNote_BasicAsset::class);

