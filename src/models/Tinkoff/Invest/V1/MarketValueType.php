<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: marketdata.proto

namespace Tinkoff\Invest\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>tinkoff.public.invest.api.contract.v1.MarketValueType</code>
 */
class MarketValueType
{
    /**
     *Не определен.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_UNSPECIFIED = 0;</code>
     */
    const INSTRUMENT_VALUE_UNSPECIFIED = 0;
    /**
     *Последняя биржевая цена.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_LAST_PRICE = 1;</code>
     */
    const INSTRUMENT_VALUE_LAST_PRICE = 1;
    /**
     *Последняя цена дилера.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_LAST_PRICE_DEALER = 2;</code>
     */
    const INSTRUMENT_VALUE_LAST_PRICE_DEALER = 2;
    /**
     *Цена закрытия.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_CLOSE_PRICE = 3;</code>
     */
    const INSTRUMENT_VALUE_CLOSE_PRICE = 3;
    /**
     *Цена последней сделки с вечерней сессии.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_EVENING_SESSION_PRICE = 4;</code>
     */
    const INSTRUMENT_VALUE_EVENING_SESSION_PRICE = 4;
    /**
     * Открытый интерес, возвращается только для фьючерсов.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_OPEN_INTEREST = 5;</code>
     */
    const INSTRUMENT_VALUE_OPEN_INTEREST = 5;
    /**
     *Теоретическая цена, возвращается только для опционов.
     *
     * Generated from protobuf enum <code>INSTRUMENT_VALUE_THEOR_PRICE = 6;</code>
     */
    const INSTRUMENT_VALUE_THEOR_PRICE = 6;

    private static $valueToName = [
        self::INSTRUMENT_VALUE_UNSPECIFIED => 'INSTRUMENT_VALUE_UNSPECIFIED',
        self::INSTRUMENT_VALUE_LAST_PRICE => 'INSTRUMENT_VALUE_LAST_PRICE',
        self::INSTRUMENT_VALUE_LAST_PRICE_DEALER => 'INSTRUMENT_VALUE_LAST_PRICE_DEALER',
        self::INSTRUMENT_VALUE_CLOSE_PRICE => 'INSTRUMENT_VALUE_CLOSE_PRICE',
        self::INSTRUMENT_VALUE_EVENING_SESSION_PRICE => 'INSTRUMENT_VALUE_EVENING_SESSION_PRICE',
        self::INSTRUMENT_VALUE_OPEN_INTEREST => 'INSTRUMENT_VALUE_OPEN_INTEREST',
        self::INSTRUMENT_VALUE_THEOR_PRICE => 'INSTRUMENT_VALUE_THEOR_PRICE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

